function output = loudnessWithC(x, fs)
% sound pressure level with C-weighting
%   output = loudnessWithC(x, fs)
% Argument
%   x    : input signal. double 1-d vector
%   fs   : sampling frequency (Hz) recommend to use 44100 Hz or higher
%
% Output
%   output   : structure with the following field
%      (note the sound pressure levels are not calibrated)
%        fast: double 1-d vector with sound pressu level in dB
%        slow: double 1-d vector with sound pressu level in dB
%    filtered: double 1-d vector with filtered signal
%        time: double 1-d vector time axis (s)

% copyright 2019 Hideki Kawahara
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
% 
%     http://www.apache.org/licenses/LICENSE-2.0
% 
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

cWeightFir = designCweightingFIRFilter(fs);
n_fir = length(cWeightFir);
y = fftfilt(cWeightFir, [x;zeros(n_fir, 1)]);
y = y(round(n_fir / 2) + (1:length(x)));
r_fast = exp(-1/0.125/fs); % time constant 125 ms
r_slow = exp(-1/fs); % time constant 1 s
y_fast = filter(1, [1 -r_fast] / (1 - r_fast), y.^2);
y_slow = filter(1, [1 -r_slow] / (1 - r_slow), y.^2);
output.fast = 10 * log10(y_fast);
output.slow = 10 * log10(y_slow);
output.filtered = y;
output.time = (0:length(x) - 1)' / fs;
end

function cWeightFir = designCweightingFIRFilter(fs)
%   cWeightFir = designCweightingFIRFilter(fs)

%   by Hideki Kawahara
%   28/May/2014

%
% ----- definition of C-weight -----
%---- JIS C1516:2014
cWeightTable = [...
10 -14.3; ...
12.5 -11.2; ...
16 -8.5; ...
20	-6.2; ...	
25	-4.4	; ...
31.5	-3.0	; ...
40	-2.0	; ...
50	-1.3	; ...
63	-0.8	; ...
80	-0.5	; ...
100	-0.3	; ...
125	-0.2	; ...
160	-0.1	; ...
200	0.0	; ...
250	0.0	; ...
315	0.0	; ...
400	0.0	; ...
500	0.0	; ...
630	0.0; ...
800	0.0; ...
1000	0; ...
1250	0.0 ; ...
1600	-0.1; ...
2000	-0.2; ...
2500	-0.3; ...
3150	-0.5; ...
4000	-0.8; ...
5000	-1.3; ...
6300	-2.0; ...
8000	-3.0; ...
10000	-4.4; ...
12500	-6.2; ...
16000	-8.5; ...
20000	-11.2];
fxBase = cWeightTable(:,1);
cWeightBase = cWeightTable(:,2);
%
fftl = 4096;
fx = (0:fftl-1)'/fftl*fs;
%tmpGain = interp1(fxBase,aWeightBase-10*log10(fxBase/1000),fx,'linear','extrap');
tmpGain = interp1(fxBase,cWeightBase,fx,'linear','extrap');
tmpAmp = 10.0.^(tmpGain/20);
tmpAmp(fftl/2+1:fftl) = tmpAmp(fftl/2+1:-1:2);
cWeightFirTmp = fftshift(real(ifft(tmpAmp)));
[~, maxIndex] = max(cWeightFirTmp);
cWeightFir = cWeightFirTmp(maxIndex+(-500:500));
end